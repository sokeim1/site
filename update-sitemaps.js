const fs = require('fs');
const path = require('path');

// –°—Ç–∞—Ä—ã–π –∏ –Ω–æ–≤—ã–π –¥–æ–º–µ–Ω—ã
const OLD_DOMAIN = 'kinohdpremium.netlify.app';
const NEW_DOMAIN = 'kinohd-premium.vercel.app';

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
const files = [
    'sitemap.xml',
    'sitemap-index.xml',
    'sitemap-movies-1.xml',
    'sitemap-movies-2.xml',
    'sitemap-movies-3.xml'
];

console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ sitemap —Ñ–∞–π–ª–æ–≤...\n');

files.forEach(filename => {
    const filepath = path.join(__dirname, filename);
    
    if (!fs.existsSync(filepath)) {
        console.log(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filename}`);
        return;
    }
    
    try {
        // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        let content = fs.readFileSync(filepath, 'utf8');
        
        // –£–¥–∞–ª—è–µ–º Git –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã (–≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
        content = content.replace(/<<<<<<< HEAD\r?\n/g, '');
        content = content.replace(/=======\r?\n/g, '');
        content = content.replace(/>>>>>>> [^\r\n]+\r?\n/g, '');
        
        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∑–∞–≥–æ–ª–æ–≤–∫–∏ xmlns –ø–æ—Å–ª–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
        content = content.replace(
            /<urlset xmlns="http:\/\/www\.sitemaps\.org\/schemas\/sitemap\/0\.9"\s+xmlns:image="http:\/\/www\.google\.com\/schemas\/sitemap-image\/1\.1">\s*<urlset xmlns="http:\/\/www\.sitemaps\.org\/schemas\/sitemap\/0\.9">/g,
            '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">'
        );
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –µ—Å–ª–∏ –æ—Å—Ç–∞–ª—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω xmlns —Å image
        content = content.replace(
            /<urlset xmlns="http:\/\/www\.sitemaps\.org\/schemas\/sitemap\/0\.9"\s+xmlns:image="http:\/\/www\.google\.com\/schemas\/sitemap-image\/1\.1">/g,
            '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">'
        );
        
        // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π –¥–æ–º–µ–Ω –Ω–∞ –Ω–æ–≤—ã–π
        const oldCount = (content.match(new RegExp(OLD_DOMAIN, 'g')) || []).length;
        content = content.replace(new RegExp(OLD_DOMAIN, 'g'), NEW_DOMAIN);
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —Å—Ç—Ä–æ–∫–∏ xmlns
        content = content.replace(
            /<urlset xmlns="http:\/\/www\.sitemaps\.org\/schemas\/sitemap\/0\.9"\s+xmlns:image="http:\/\/www\.google\.com\/schemas\/sitemap-image\/1\.1">\s+<urlset xmlns="http:\/\/www\.sitemaps\.org\/schemas\/sitemap\/0\.9">/g,
            '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">'
        );
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        fs.writeFileSync(filepath, content, 'utf8');
        
        console.log(`‚úÖ ${filename}`);
        if (oldCount > 0) {
            console.log(`   –ó–∞–º–µ–Ω–µ–Ω–æ –¥–æ–º–µ–Ω–æ–≤: ${oldCount}`);
        }
        
    } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${filename}:`, error.message);
    }
});

console.log('\n‚úÖ –ì–æ—Ç–æ–≤–æ! –í—Å–µ sitemap —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã.');
console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã');
console.log('2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ Vercel (git push)');
console.log('3. –í Google Search Console –≤–≤–µ–¥–∏—Ç–µ: sitemap-index.xml');
